- name: Ensure Incus is installed
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Check if Incus is installed
      command: rpm -q incus
      register: incus_check
      ignore_errors: yes

    - name: Fail if Incus is not installed
      fail:
        msg: "Required package 'Incus' is not installed"
      when: incus_check.rc != 0

- name: Add required kernel modules
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Add the Overlay module
      community.general.modprobe:
        name: overlay
        state: present
  
    - name: Add the Netfilter module
      community.general.modprobe:
        name: br_netfilter
        state: present

- name: Create Incus profile
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Check if profile already exists
      command: incus profile show k3s
      register: k3s_check
      failed_when: false
      changed_when: false

    - name: Create an Incus profile
      ansible.builtin.shell: incus profile create k3s < profile.yaml
      when: k3s_check.rc != 0

- name: Setup Incus containers
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars.yaml

  tasks:
    - name: Check if container {{ item }} exists
      ansible.builtin.shell: |
        incus info {{ item }}
      loop: "{{ container_names }}"
      register: container_check
      failed_when: false
      changed_when: false

    - name: Create container if it doesn't exist
      ansible.builtin.shell: |
        incus launch images:ubuntu/24.04 {{ item.item }} \
        --profile default --profile k3s
      loop: "{{ container_check.results }}"
      when: item.rc != 0
      changed_when: true

    - name: Add proc-sys kernel
      ansible.builtin.shell: |
        incus config device add {{ item.item }} proc-sys kernel \
          source=/proc/sys/kernel path=/proc/sys/kernel recursive=true \
          type=disk
      loop: "{{ container_check.results }}"
      when: item.rc != 0
      changed_when: true

    - name: Add proc-sys-vm vm
      ansible.builtin.shell: |
        incus config device add {{ item.item }} proc-sys-vm vm \
        source=/proc/sys/vm path=/proc/sys/vm recursive=true type=disk
      loop: "{{ container_check.results }}"
      when: item.rc != 0
      changed_when: true

- name: Setup admin user
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars.yaml
  tasks:
    - name: Check if admin user exists in container
      ansible.builtin.shell: |
        incus exec {{ item }} -- sh -c "grep '^admin:' /etc/passwd"
      loop: "{{ container_names }}"
      register: admin_user_check
      changed_when: false
      failed_when: false

    - name: Setup admin user
      ansible.builtin.shell: |
        incus exec {{ item.item }} -- sh -c "
          useradd -m admin
          usermod -aG sudo admin
          echo 'admin ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/admin
        "
      loop: "{{ admin_user_check.results }}"
      when: item.rc != 0

- name: Setup Tailscale
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars.yaml

  tasks:
    - name: Get tailscale status
      ansible.builtin.command: tailscale status --json
      register: tailscale_status_json
      changed_when: false

    - name: Parse JSON
      set_fact:
        tailscale_names: >-
          {{
            (tailscale_status_json.stdout | from_json).Peer | dict2items |
            map(attribute='value.HostName') | list
            + [ (tailscale_status_json.stdout | from_json).Self.HostName ]
          }}

    - name: Setup tailscale
      ansible.builtin.shell: |
        incus exec {{ item }} -- sh -c "
          apt update && apt install curl -y &&
          curl -fsSL https://tailscale.com/install.sh | sh
        "
      loop: "{{ container_names }}"
      when: item not in tailscale_names
      changed_when: true

    - name: Add to tailnet
      ansible.builtin.shell: |
        incus exec {{ item }} -- sh -c "
          tailscale up --authkey {{ tailscale_authkey }} --reset &&
          tailscale set --ssh
        "
      loop: "{{ container_names }}"
      when: item not in tailscale_names
      changed_when: true
